language: generic
jobs:
  include:
    - stage: compiling and checking sources
      dist: trusty
      sudo: false
      env: [ "V=4.0", "PREFIX=/usr/lib/llvm-4.0/lib/cmake", "BIN=/usr/lib/llvm-4.0/bin" ]
      addons:
        apt:
          sources: [ "ubuntu-toolchain-r-test", "llvm-toolchain-trusty-4.0" ]
          packages: [ "libboost-all-dev", "tcl-dev", "tk-dev", "emacs", "clang-4.0", "libclang-4.0-dev", "llvm-4.0-dev", "clang-format-4.0", "clang-tidy-4.0" ]
      before_script:
        # Fix clang cmake dirs
        - if [ $V == 4.0 ]; then  sudo -E ln -sn /usr/share/llvm-4.0/cmake /usr/lib/llvm-4.0/lib/cmake/clang;     fi
        - if [ $V == 4.0 ]; then  sudo -E ln -sn /usr/share/llvm-4.0/cmake /usr/lib/llvm-4.0/lib/cmake/clang-4.0; fi
        - if [ $V == 4.0 ]; then  sudo -E ln -s  /usr/bin/*                /usr/lib/llvm-4.0/bin || true;         fi
      script:
        - mkdir -p ../cache/vm ../cache/boostenv
        - mv vm/boostenv/main/cached ../cache/boostenv
        - mv vm/vm/main/cached ../cache/vm
        - export SOURCES=$(pwd) && mkdir ../build && cd ../build
        - cmake -DCMAKE_BUILD_TYPE=Release -DMOZART_BOOST_USE_STATIC_LIBS=False -DCMAKE_PROGRAM_PATH=$BIN -DCMAKE_PREFIX_PATH=$PREFIX -DMOZART_CACHED_BUILD=OFF $SOURCES
        - make -B gensources genboostsources VERBOSE=1
        - cd ..
        - diff -q -r cache/boostenv/cached build/vm/boostenv/main/generated
        - diff -Npur cache/boostenv/cached build/vm/boostenv/main/generated
        - diff -q -r cache/vm/cached build/vm/vm/main/generated
        - diff -Npur cache/vm/cached build/vm/vm/main/generated

    - stage: compiling with pre-generated sources
      dist: trusty
      sudo: false
      env: [ "V=4.0", "PREFIX=/usr/lib/llvm-4.0/lib/cmake", "BIN=/usr/lib/llvm-4.0/bin" ]
      addons:
        apt:
          sources: [ "ubuntu-toolchain-r-test", "llvm-toolchain-trusty-4.0" ]
          packages: [ "libboost-all-dev", "tcl-dev", "tk-dev", "emacs", "clang-4.0", "libclang-4.0-dev", "llvm-4.0-dev", "clang-format-4.0", "clang-tidy-4.0" ]
      before_script:
        # Fix clang cmake dirs
        - if [ $V == 4.0 ]; then  sudo -E ln -sn /usr/share/llvm-4.0/cmake /usr/lib/llvm-4.0/lib/cmake/clang;     fi
        - if [ $V == 4.0 ]; then  sudo -E ln -sn /usr/share/llvm-4.0/cmake /usr/lib/llvm-4.0/lib/cmake/clang-4.0; fi
        - if [ $V == 4.0 ]; then  sudo -E ln -s  /usr/bin/*                /usr/lib/llvm-4.0/bin || true;         fi
      script:
        - export SOURCES=$(pwd) && mkdir ../build && cd ../build
        - cmake -DCMAKE_BUILD_TYPE=Release -DMOZART_BOOST_USE_STATIC_LIBS=False -DCMAKE_PROGRAM_PATH=$BIN -DCMAKE_PREFIX_PATH=$PREFIX $SOURCES
        - make dist VERBOSE=1
        - make VERBOSE=1
        - make check
      deploy:
        provider: releases
        skip_cleanup: true
        on:
          tags: true
        file_glob: true
        file: mozart2-*-Source.zip
        api_key:
          secure: GxwttdinweSfTeSkWu3aSp//AGT/ew4iyEUaLxh8nDeVRpAHEPBtMhgF25zoP6JLfhlEAOW7+5Gmomk1a/k+VQQWbFbod3jSSUIH/4gafEN7MVgy3Ma1NEWqViSC7IH/DDIhMzHAttznDOA2nWzoV1nyDpUydM8wvs3VK2N2wEI=
    - stage: compiling with pre-generated sources
      os: osx
      before_script:
        - brew install tcl-tk boost@1.57 emacs
      script:
        - javac -version
        - export SOURCES=$(pwd) && mkdir ../build && cd ../build
        - cmake -DCMAKE_BUILD_TYPE=Release -DMOZART_BOOST_USE_STATIC_LIBS=False $SOURCES
        - make dist VERBOSE=1
        - make VERBOSE=1
        - make check
      deploy:
        provider: releases
        skip_cleanup: true
        on:
          tags: true
        file_glob: true
        file: mozart2-*-Source.zip
        api_key:
          secure: GxwttdinweSfTeSkWu3aSp//AGT/ew4iyEUaLxh8nDeVRpAHEPBtMhgF25zoP6JLfhlEAOW7+5Gmomk1a/k+VQQWbFbod3jSSUIH/4gafEN7MVgy3Ma1NEWqViSC7IH/DDIhMzHAttznDOA2nWzoV1nyDpUydM8wvs3VK2N2wEI=
